apiVersion: v1
kind: Namespace
metadata:
  name: vul-app-ns
---
apiVersion: v1
kind: ServiceAccount
metadata:
 name: cluster-admin-sa
 namespace: vul-app-ns
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
 name: admin-clusterrolebinding
subjects:
- kind: ServiceAccount
  name: cluster-admin-sa
  namespace: vul-app-ns
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: ""
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: secret-sa
  namespace: vul-app-ns
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pod-sa-clusterrolebinding
subjects:
- kind: ServiceAccount
  name: secret-sa
  namespace: vul-app-ns
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: secret-role
  apiGroup: ""
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: secret-role
rules:
- apiGroups: ["*"]
  resources: ["serviceaccounts","serviceaccounts/token"]
  verbs: ["*"]
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: vul-app
  name: vul-app
  namespace: vul-app-ns
spec:
  replicas: 1
  selector:
    name: vul-app
  template:
    metadata:
      labels:
        name: vul-app
    spec:
      serviceAccountName: secret-sa
      containers:
#      - image: chrisley75/vul-app:2.0.0 # Same image hosted in docker hub
      - image: 016246143337.dkr.ecr.eu-west-3.amazonaws.com/cleypanw/prisma-cloud-vul-app:2bc0429219ebd256b316401b6a3cd3a8ea7c3001
        name: vul-app
        ports:
        - containerPort: 5000
          name: http-server
---
apiVersion: v1
kind: Service
metadata:
  name: vul-app-svc
  namespace: vul-app-ns
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 5000
  selector:
    name: vul-app
